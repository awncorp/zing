#!/usr/bin/env perl

use strict;
use warnings;

use Zing::Zang;

=pod explain

- when creating zing processes ...
- typically you will want to subclass a Zing/Process derived class ...
- however, there are times when you don't need/want to dedicate a class

- the zang namespace is reserved for ready-to-use callback-based zing processes
- these ready-to-use classes simply stand-in as shoehorns so that you don't need ...
- to create your own dedicated class to leverage the functionality

- zing-zang is simple a Zing/Process
- it provides on_perform() and on_receive() handlers

=cut

my $z = Zing::Zang->new(
  on_perform => sub {
    my ($self) = @_;

    warn time;

    return;
  },
);

$z->exercise;
